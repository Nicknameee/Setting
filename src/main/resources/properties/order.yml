server:
  port: ${SERVER_PORT:9015}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:Order}

  security:
    user:
      name: ${SPRING_SECURITY_USER_NAME:user}
      password: ${SPRING_SECURITY_USER_PASSWORD:user}

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5432/orders}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:1904}

  datasource-users:
    driver-class-name: org.postgresql.Driver
    url: ${USER_READER_DB_URL}
    username: ${USER_READER_DB_USERNAME:postgres}
    password: ${USER_READER_DB_PASSWORD:1904}

  redis-users:
    host: ${REDIS_HOST_INFRASTRUCTURE:localhost}
    port: ${REDIS_PORT_INFRASTRUCTURE:6379}
    database: ${REDIS_DATABASE_INFRASTRUCTURE:0}
    password: ${REDIS_PASSWORD_INFRASTRUCTURE:1904}

  flyway:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/orders}
    user: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:1904}
    locations: classpath:migrations
    out-of-order: true
    baseline-on-migrate: true
    enabled: true

  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      client-id: id
    consumer:
      group-id: id
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

eureka:
  instance:
    instance-id: ${EUREKA_INSTANCE_ID:${spring.application.name:Order}:${server.port}}
    hostname: ${EUREKA_HOSTNAME:localhost}
  client:
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL:http://${SPRING_SECURITY_USER_NAME:user}:${SPRING_SECURITY_USER_PASSWORD:user}@localhost:8889/eureka}

logging:
  level:
    org.apache.kafka.clients: ERROR

api:
  delivery:
    nova:
      host: ${NOVA_POST_HOST:https://api.novaposhta.ua/v2.0/json/}
      token: ${NOVA_POST_TOKEN}
